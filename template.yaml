AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  auto-tagging-with-mds

Globals:
  Function:
    Timeout: 5
    MemorySize: 128

Parameters:
  Version:
    Type: String
    Default: prod

Resources:
  AutoTaggingApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: auto-tagging
      StageName: !Ref Version
      Cors:
        AllowMethods: "'DELETE,GET,OPTIONS,POST,PUT'"
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"  
   
  MDSTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: PK
        AttributeType: S
      - AttributeName: SK
        AttributeType: S
      - AttributeName: uuid
        AttributeType: S
      KeySchema:
      - AttributeName: PK
        KeyType: HASH
      - AttributeName: SK
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableName:  at_mds-prod
      GlobalSecondaryIndexes:
      - IndexName: uuid-index
        KeySchema:
        - AttributeName: uuid
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  ServiceCreateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/service/create
      Handler: create
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/services
            Method: POST
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  ServiceIndexFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/service/index
      Handler: index
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/services
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  ServiceShowFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/service/show
      Handler: show
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/services/{service_name}
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  ServiceUpdateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/service/update
      Handler: update
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/services1/{service_uuid}/update
            Method: PUT
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  ServiceDeleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/service/delete
      Handler: delete
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/services/{service_name}
            Method: DELETE
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable
     
  CompanyCreateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/company/create
      Handler: create
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/companies
            Method: POST
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  CompanyIndexFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/company/index
      Handler: index
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/companies
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  CompanyShowFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/company/show
      Handler: show
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/companies/{company_name}
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  CompanyUpdateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/company/update
      Handler: update
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/companies1/{company_uuid}/update
            Method: PUT
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  companyDeleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/company/delete
      Handler: delete
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/companies/{company_name}
            Method: DELETE
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  TagCreateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/tag/create
      Handler: create
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/tags
            Method: POST
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  TagIndexFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/tag/index
      Handler: index
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/tags
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  TagShowFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/tag/show
      Handler: show
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/tags/{tag_key}
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  TagDeleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/tag/delete
      Handler: delete
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/tags/{tag_key}/{tag_value}
            Method: DELETE
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

############################################

  RuleCreateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/rule/create
      Handler: create
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/rules
            Method: POST
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  RuleIndexFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/rule/index
      Handler: index
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/rules
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  RuleShowFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/rule/show
      Handler: show
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBReadOnlyAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/rules/{rule_uuid}
            Method: GET
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  RuleUpdateFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/rule/update
      Handler: update
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/rules/{rule_uuid}
            Method: PUT
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable

  RuleDeleteFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: api/rule/delete
      Handler: delete
      Runtime: go1.x
      Tracing: Active 
      Policies: AmazonDynamoDBFullAccess
      Events:
        CatchAll:
          Type: Api 
          Properties:
            Path: /api/v1/rules/{rule_uuid}
            Method: DELETE
            RestApiId: !Ref AutoTaggingApi
      Environment:
        Variables:
          TABLE_NAME: !Ref MDSTable   

